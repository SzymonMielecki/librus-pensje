generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Employee {
  id       String     @id @default(uuid())
  name     String     @unique
  contract Contract[]
}

model Service {
  id              String            @id @default(uuid())
  name            String            @unique
  contractService ContractService[]
}

model ContractType {
  id       String     @id @default(uuid())
  name     String     @unique
  contract Contract[]
}

model SalaryType {
  id              String            @id @default(uuid())
  name            String            @unique
  contract        Contract[]
  contractService ContractService[]
}

model Contract {
  id              String            @id @default(uuid())
  employeeId      String
  number          String
  contractTypeId  String
  fixedSalary     Float?
  salaryTypeId    String?
  employee        Employee          @relation(fields: [employeeId], references: [id])
  contractType    ContractType      @relation(fields: [contractTypeId], references: [id])
  salaryType      SalaryType?       @relation(fields: [salaryTypeId], references: [id])
  contractService ContractService[]

  @@index([employeeId])
  @@index([contractTypeId])
  @@index([salaryTypeId])
}

model Category {
  id              String            @id @default(uuid())
  name            String            @unique
  contractService ContractService[]
}

model ContractEmployeeType {
  id              String            @id @default(uuid())
  name            String            @unique
  contractService ContractService[]
}

model HoursMonths {
  id                String           @id @default(uuid())
  month             Int
  hoursWorked       Int?
  contractServiceId String?
  contractService   ContractService? @relation(fields: [contractServiceId], references: [id])

  @@index([contractServiceId])
}

model ContractService {
  id                     String               @id @default(uuid())
  contractId             String
  serviceId              String
  salary                 Float?
  salaryTypeId           String?
  categoryId             String
  contractEmployeeTypeId String
  contract               Contract             @relation(fields: [contractId], references: [id])
  service                Service              @relation(fields: [serviceId], references: [id])
  salaryType             SalaryType?          @relation(fields: [salaryTypeId], references: [id])
  category               Category             @relation(fields: [categoryId], references: [id])
  contractEmployeeType   ContractEmployeeType @relation(fields: [contractEmployeeTypeId], references: [id])
  hoursMonths            HoursMonths[]

  @@index([contractId])
  @@index([serviceId])
  @@index([salaryTypeId])
  @@index([categoryId])
  @@index([contractEmployeeTypeId])
}
