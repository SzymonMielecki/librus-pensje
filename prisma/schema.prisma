// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Employee {
  id       String     @id @default(uuid())
  name     String
  Contract Contract[]
}

model Service {
  id              String            @id @default(uuid())
  name            String
  ContractService ContractService[]
}

model ContractType {
  id       String     @id @default(uuid())
  name     String
  Contract Contract[]
}

model SalaryType {
  id              String            @id @default(uuid())
  name            String
  Contract        Contract[]
  ContractService ContractService[]
}

model Contract {
  id              String            @id @default(uuid())
  number          String
  employee        Employee          @relation(fields: [employeeId], references: [id])
  employeeId      String
  contractType    ContractType      @relation(fields: [contractTypeId], references: [id])
  contractTypeId  String
  fixedSalary     Float?
  SalaryType      SalaryType?       @relation(fields: [salaryTypeId], references: [id])
  salaryTypeId    String?
  ContractService ContractService[]
}

model Category {
  id              String            @id @default(uuid())
  name            String
  ContractService ContractService[]
}

model ContractEmployeeType {
  id              String            @id @default(uuid())
  name            String
  ContractService ContractService[]
}

model HoursMonths {
  id                String           @id @default(uuid())
  month             Int
  hoursWorked       Int?
  ContractService   ContractService? @relation(fields: [contractServiceId], references: [id])
  contractServiceId String?
}

model ContractService {
  id                     String               @id @default(uuid())
  contract               Contract             @relation(fields: [contractId], references: [id])
  contractId             String
  service                Service              @relation(fields: [serviceId], references: [id])
  serviceId              String
  salary                 Float
  salaryType             SalaryType           @relation(fields: [salaryTypeId], references: [id])
  salaryTypeId           String
  category               Category             @relation(fields: [categoryId], references: [id])
  categoryId             String
  ContractEmployeeType   ContractEmployeeType @relation(fields: [contractEmployeeTypeId], references: [id])
  contractEmployeeTypeId String
  hoursMonths            HoursMonths[]
}
